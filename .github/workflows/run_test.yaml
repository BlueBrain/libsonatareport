name: run-test
on:
    push:

jobs:
    build:
        name: run-test
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ ubuntu-18.04 ]
                config:
                  - {cmake_option: "-DSONATA_REPORT_ENABLE_SUBMODULES=ON", mpi: ON}
                  - {cmake_option: "-DSONATA_REPORT_ENABLE_SUBMODULES=ON -DSONATA_REPORT_ENABLE_MPI=OFF", mpi: OFF}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Get submodules
              run: git submodule update --init --force --recursive --depth 1
            - name: Install parallel packages
              if: ${{ matrix.config.mpi == 'ON' }}
              run: sudo apt-get install libhdf5-openmpi-dev hdf5-tools
            - name: Install serial packages
              if: ${{ matrix.config.mpi == 'OFF' }}
              run: sudo apt-get install libhdf5-dev hdf5-tools
            - name: Remove warning
              if: ${{ matrix.config.mpi == 'ON' }}
              run: echo "btl_base_warn_component_unused = 0" | sudo tee --append /etc/openmpi/openmpi-mca-params.conf
            - name: Install libsonata with mpi
              if: ${{ matrix.config.mpi == 'ON' }}
              run: |
                git clone --recurse-submodules --shallow-submodules --depth 1 https://github.com/BlueBrain/libsonata
                cd libsonata && git tag 1337.42 && mkdir BUILD && cd BUILD && cmake -DCMAKE_INSTALL_PREFIX=/ -DEXTLIB_FROM_SUBMODULES=ON -DSONATA_PYTHON=OFF -DSONATA_TESTS=OFF -DSONATA_CXX_WARNINGS=OFF -DCMAKE_C_COMPILER:STRING=mpicc -DCMAKE_CXX_COMPILER:STRING=mpicxx .. && make -j2 all install DESTDIR=INSTALL
              working-directory: ${{runner.workspace}}
            - name: Install libsonata without mpi
              if: ${{ matrix.config.mpi == 'OFF' }}
              run: |
                git clone --recurse-submodules --shallow-submodules --depth 1 https://github.com/BlueBrain/libsonata
                cd libsonata && git tag 1337.42 && mkdir BUILD && cd BUILD && cmake -DCMAKE_INSTALL_PREFIX=/ -DEXTLIB_FROM_SUBMODULES=ON -DSONATA_PYTHON=OFF -DSONATA_TESTS=OFF -DSONATA_CXX_WARNINGS=OFF .. && make -j2 all install DESTDIR=INSTALL
              working-directory: ${{runner.workspace}}
            - name: Build libsonatareport
              run: mkdir BUILD && cd BUILD && cmake -DCMAKE_PREFIX_PATH=${{runner.workspace}}/libsonata/BUILD/INSTALL ${cmake_option} .. && make -j2 all
              env:
                cmake_option: ${{ matrix.config.cmake_option }}
            - name: Run tests
              run: ctest --output-on-failure
              working-directory: BUILD
